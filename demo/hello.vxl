import io;
import threads;

class LedManager {
    _state = false;

    get state() {
        return this._state;
    }

    set state(value) {
        syscall setLed(value);

        this._state = value;

        io.println(value ? "LED on\r" : "LED off\r");
    }

    toggle() {
        this.state = !this.state;
    }
}

var onboardLed = new LedManager();

function artificialDelay(duration) {
    for (var i = 0; i < duration; i++) {}
}

var blinkingThread = new threads.Thread(function() {
    while (true) {
        artificialDelay(1000);

        onboardLed.toggle();
    }
}, []);

var loggingThread = new threads.Thread(function() {
    while (true) {
        io.println("Hello, world! Now with class usage\r");

        artificialDelay(100);
    }
}, []);

blinkingThread.start();
loggingThread.start();